{"version":3,"file":"static/js/672.5ecc53a8.chunk.js","mappings":"4KACA,GAAgB,MAAQ,uBAAuB,QAAU,yBAAyB,YAAc,8B,mBCahG,EAVmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,gBAAKC,UAAWC,EAAAA,WAAhB,UACE,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAG/B,ECeD,EAxBgB,SAACN,GASf,OAQI,gBAAKG,UAAWC,EAAAA,QAAhB,SACGJ,EAAMO,SAId,E,uCCjBKC,GAAcC,EAAAA,EAAAA,GAAiB,IA2C/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAfL,SAACX,GACtB,OACE,kBAAMa,SAAUb,EAAMc,aAAtB,WACE,0BACE,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAClBC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAK,iBAAiBc,YAAY,0BAEpC,0BACE,iDAIP,IAID,EA3CgB,SAACpB,GAEf,IAAIqB,EAAQrB,EAAMsB,YAEdC,EACFF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBJ,GAAIwB,EAAExB,IAAZwB,EAAExB,GAArC,IACjByB,EACFN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE3B,GAAxC,IAMtB,OACE,iBAAKC,UAAWC,EAAAA,MAAhB,WACE,gBAAKD,UAAWC,EAAAA,QAAhB,SACGmB,KAEH,gBAAKpB,UAAWC,EAAAA,SAAhB,SACGuB,KAEH,SAACjB,EAAD,CAAqBG,SAZL,SAACiB,GACnB9B,EAAM+B,YAAYD,EAAOE,eAC1B,MAaF,E,oBCZD,GAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAhBoB,SAACb,GACrB,MAAO,CACLC,YAAaD,EAAMC,YAEtB,IAEwB,SAACa,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,GAASC,EAAAA,EAAAA,GAAmBJ,GAC7B,EAEJ,IAKCK,EAAAA,EAFF,CAGEC,E,mJCrBEC,EAA0B,SAAClB,GAAD,MAAY,CACxCmB,OAAQnB,EAAMoB,KAAKD,OADS,EAIjBH,EAAmB,SAACK,GAAe,IAExCC,EAFuC,0IAG3C,WACE,OAAKC,KAAK5C,MAAMwC,QACT,SAACE,GAAD,UAAeE,KAAK5C,SADI,SAAC,KAAD,CAAUK,GAAI,UAE9C,KAN0C,GAEbwC,EAAAA,WAUhC,OAFqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAiCS,EAGvE,C","sources":["webpack://my-app-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Dialogs_title__m2mrl\",\"dialogs\":\"Dialogs_dialogs__Zt464\",\"messageItem\":\"Dialogs_messageItem__Td5Ng\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n\r\n  return (\r\n    <div className={s.dialogItem}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n\r\n  // let newPostElement = React.createRef();\r\n  \r\n  // // let addPost = () => {\r\n  // //   let text = newPostElement.current.value;\r\n  // //   alert(text)\r\n  // // }\r\n\r\n  return (\r\n    // <div>\r\n    //   {/* <div>\r\n    //     <textarea ref={newPostElement}></textarea>\r\n    //   </div>\r\n    //   <div>\r\n    //     <button onClick={addPost}>Add post</button>\r\n    //   </div> */}\r\n      <div className={s.Message}>\r\n        {props.message}\r\n      </div>\r\n    // </div >\r\n  )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements =\r\n    state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n  let messagesElements =\r\n    state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageText);\r\n  }\r\n  \r\n  return (\r\n    <div className={s.title}>\r\n      <div className={s.dialogs}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} \r\n        validate={[required, maxLength50]}\r\n        name='newMessageText' placeholder='Enter your message'/>\r\n      </div>\r\n      <div>\r\n        <button>Send message</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageText) => {\r\n      dispatch(sendMessageCreator(newMessageText));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect,\r\n)(Dialogs)\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageText","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs","mapStateToPropsRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}