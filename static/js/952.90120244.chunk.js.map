{"version":3,"file":"static/js/952.90120244.chunk.js","mappings":"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","sources":["webpack://my-app-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://my-app-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.module.css","webpack://my-app-1/./src/components/Profile/Profileinfo/Profileinfo.module.css?e2a6","components/Profile/Profileinfo/ProfileStatusWithHooks.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__VYRIM\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQrV5FwfY_rhAJ68NuJdR3Fy_smBGmMYup8Mw&usqp=CAU' />\r\n      {props.message}\r\n      <div>\r\n      <span>{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__zs7-i\",\"postItem\":\"MyPosts_postItem__kMJcw\"};","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo(props => {\r\n  console.log('React memo')\r\n  let postsElements =\r\n    props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount} />).reverse();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.postItem}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name='newPostText' placeholder='Enter your message'\r\n          validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"first_image\":\"Profileinfo_first_image__Fi+GG\",\"second_image\":\"Profileinfo_second_image__6YqJa\",\"about_me\":\"Profileinfo_about_me__PQQrR\",\"decription\":\"Profileinfo_decription__CEltN\",\"status\":\"Profileinfo_status__rCu2j\"};","import React, { useEffect, useState } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './Profileinfo.module.css'\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    // const activateEditMode = () => {\r\n    //     setEditMode(true);\r\n    // }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.status}>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={() => setEditMode(true)}>{props.status || '-----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './Profileinfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst Profileinfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div className={s.content}>\r\n      <div>\r\n        <img className={s.first_image} src='https://rich-tour.com/uploads/default/kcfinder/images/Italy%20Village%20%26%20Beach%20Resort/%D0%A0%D0%B8%D1%81%D1%83%D0%BD%D0%BE%D0%BA1.jpg' />\r\n      </div>\r\n      <div>\r\n        <img className={s.second_image} src={profile.photos.large} />\r\n        <div className={s.about_me}>\r\n          <div>Имя:&nbsp;&nbsp;\r\n            <span className={s.decription}>{profile.fullName}</span>\r\n          </div>\r\n          <div>Обо мне: {profile.aboutMe}</div>\r\n          <div>Ищу работу: {profile.lookingForAJobDescription}</div>\r\n          <div>Контакты: {profile.contacts.facebook}</div>\r\n        </div>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profileinfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css'\r\nimport Profileinfo from './Profileinfo/Profileinfo';\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={s.content}>\r\n      <Profileinfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from \"../../../src/redux/profile-reducer\";\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component {...props} router={{ location, navigate, params }} />\r\n    );\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile}\r\n          status={this.props.status} updateStatus={this.props.updateStatus} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter,\r\n)(ProfileContainer);\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n \r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n}\r\n"],"names":["props","className","s","src","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","console","log","postsElements","posts","map","p","id","reverse","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","fullName","aboutMe","lookingForAJobDescription","contacts","facebook","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","getUserProfile","getStatus","compose","withAuthRedirect","auth","isAuth","Component","location","useLocation","navigate","useNavigate","useParams","mapStateToPropsRedirect","RedirectComponent","to"],"sourceRoot":""}